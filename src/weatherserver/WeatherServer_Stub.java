// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package weatherserver;

public final class WeatherServer_Stub
    extends java.rmi.server.RemoteStub
    implements weatherserver.WeatherRMI, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_getRainfall_0;
    private static java.lang.reflect.Method $method_getTemp_1;
    
    static {
	try {
	    $method_getRainfall_0 = weatherserver.WeatherRMI.class.getMethod("getRainfall", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_getTemp_1 = weatherserver.WeatherRMI.class.getMethod("getTemp", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public WeatherServer_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of getRainfall(String, String)
    public java.lang.String getRainfall(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getRainfall_0, new java.lang.Object[] {$param_String_1, $param_String_2}, 2516340935519547326L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getTemp(String, String)
    public java.lang.String getTemp(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getTemp_1, new java.lang.Object[] {$param_String_1, $param_String_2}, 2081639102554030655L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
